Introduction:
Motivation for proving knowledge of witness, shared across different parties.



1. Formal notion of Distributed Provers Zero Knowledge Protocol (P,V)
1.1 Need for homomorphic commitments (Oracle access for IOP).

2. Preliminaries:
- Codes, 
- IOP, RS-IOP
- Commitments, Homomorphic Commitments,


3. DPZK Protocol 
3.1 Vanilla Ligero with homomorphic commitments
 -- some technical description of the techniques, and how "commitment oracle"
helps in realizing DPZK

3.2 If we did not use homomorphic commitment we get +poly(\secp).P protocol.


4. DPZK with reduced proof size.
4.1 ZK with O(n^1/c) proof size and O(n^{1-1/c}) pub key operations for
verifier.
 --- Using skewed matrix and inner product arguments.

5. O(n^1/c) proof with efficient verifier.

5.x IOP to NIROP 

6. Practically interesting instantiations (for c=3,4).
-- Instantiate c=3,4 with square-root inner product argument.
-- Verifier even more efficient than (4).
-- Low round complexity

7. Implementation and evaluation
 -- Provers time with number of provers.
 -- Aggregation time.

8. Related Work
 -- why Aurora, Spartan etc cannot be made distributed according to our notion.

9. Conclusion


 


